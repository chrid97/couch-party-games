{"version":3,"sources":["images/magnifying-glass.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","to","path","Browse","Game","Home","Header","Section","className","src","MagnifyingGlass","alt","type","placeholder","Card","title","Filters","GameList","GameCard","FilterInput","text","defaultValue","CarouselItem","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f419feaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass.57ab24fd.svg\";","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport MagnifyingGlass from './images/magnifying-glass.svg';\n\nfunction App() {\n  return (\n    <div className=\"App center\">\n      <Navbar />\n      {/* <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\n    </div>\n  );\n}\n\nfunction Navbar() {\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/browse\">Browse</Link>\n      </nav>\n\n      <Switch>\n        <Route path=\"/browse\">\n          <Browse />\n        </Route>\n        <Route path=\"/game\">\n          <Game />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <>\n      <Header />\n      <Section />\n    </>\n  );\n}\n\nfunction Header() {\n  return (\n    <header className=\"App-header center\">\n      <div className=\"center main\">\n        <h1>\n          Discover what <span className=\"color\">games</span> you&lsquo;ll play\n          with your friends!\n        </h1>\n        <div className=\"search-bar center\">\n          <img src={MagnifyingGlass} alt=\"Magnifying Glass\" />\n          <input\n            className=\"search\"\n            type=\"text\"\n            placeholder=\"Type in your favorite game to get similar games!\"\n          ></input>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nfunction Section() {\n  return (\n    <section className=\"game-types center\">\n      <section className=\"section2\">\n        <Card title=\"Campaign Co-Op\" />\n        <Card title=\"Couch Co-Op\" />\n        <Card title=\"Online Co-Op\" />\n        <Card title=\"Massively Multiplayer\" />\n      </section>\n    </section>\n  );\n}\n\nfunction Card({ title }: { title: string }) {\n  return (\n    <Link to=\"/browse\" className=\"card center\">\n      <h2>{title}</h2>\n      <button>Browse Games</button>\n    </Link>\n  );\n}\n\nfunction Browse() {\n  return (\n    <div className=\"browse\">\n      <Filters />\n      <GameList />\n    </div>\n  );\n}\n\nfunction GameList() {\n  return (\n    <div className=\"game-list\">\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n      <GameCard />\n    </div>\n  );\n}\n\nfunction Filters() {\n  return (\n    <div className=\"filters\">\n      <FilterInput text=\"Type of Co-Op\" />\n      <FilterInput text=\"Genres\" />\n      <FilterInput text=\"Themes\" />\n      <FilterInput text=\"Keywords\" />\n      <FilterInput text=\"Platforms\" />\n    </div>\n  );\n}\n\nfunction FilterInput({ text }: { text: string }) {\n  return (\n    <div>\n      <div className=\"name\">{text}</div>\n      <div>\n        <select defaultValue=\"Any\" className=\"filter-input\"></select>\n      </div>\n    </div>\n  );\n}\n\nfunction GameCard() {\n  return (\n    <Link to=\"game\" className=\"game-card\">\n      <div className=\"card2\"></div>\n      <p>Fall Guys</p>\n    </Link>\n  );\n}\n\nfunction Game() {\n  return (\n    <div className=\"container\">\n      <div className=\"carousel center\">\n        <div className=\"banner\"></div>\n        <div className=\"carousel-items\">\n          <CarouselItem />\n          <CarouselItem />\n          <CarouselItem />\n          <CarouselItem />\n          <CarouselItem />\n        </div>\n      </div>\n      <div>Fall Guys</div>\n      <section># of Players Platform Genre Theme</section>\n    </div>\n  );\n}\n\nfunction CarouselItem() {\n  return (\n    <div className=\"carousel-item\">\n      <img src=\"https://via.placeholder.com/220x130\" alt=\"\"></img>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}